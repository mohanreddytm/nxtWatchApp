{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/nxtWatchApp/src/components/GamingRoute/index.js\";\nimport { Component } from \"react\";\nimport { FaGamepad } from \"react-icons/fa\";\nimport Cookies from \"js-cookie\";\nimport Loader from \"react-loader-spinner\";\nimport Header from \"../Header\";\nimport LeftContainer from \"../LeftContainer\";\nimport AccessOfAllStateOne from \"../../complexOne/AccessOfAllStateOne\";\nimport GamingPage from \"../GamingPage\";\nimport FailureError from \"../FailureError\";\nimport { TrendingIconCont, TrendingContainer, TrendingHeading } from \"../Trending/styledOne\";\nimport MainContainer from \"./styledOne\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AlteringOne = {\n  loading: \"LOADING\",\n  success: \"SUCCESS\",\n  failure: \"FAILURE\"\n};\n\nclass GamingRoute extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videos: \"\",\n      status: AlteringOne.loading\n    };\n\n    this.getVideos = async () => {\n      this.setState({\n        status: AlteringOne.loading\n      });\n      const jwtToken = Cookies.get(\"jwt_token\");\n      const url = \"https://apis.ccbp.in/videos/gaming\";\n      const options = {\n        headers: {\n          Authorization: `bearer ${jwtToken} `\n        }\n      };\n      const response = await fetch(url, options);\n      const jsonOne = await response.json();\n\n      if (response.ok) {\n        this.setState({\n          videos: jsonOne.videos,\n          status: AlteringOne.success\n        });\n      } else {\n        this.setState({\n          status: AlteringOne.failure\n        });\n      }\n    };\n\n    this.loader = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"loader\",\n      className: \"loading-main\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"TailSpin\",\n        color: \"#00BFFF\",\n        height: 50,\n        width: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this);\n\n    this.failure = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FailureError, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this);\n\n    this.mainContainer = () => {\n      const {\n        videos\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(AccessOfAllStateOne.Consumer, {\n        children: value => {\n          const {\n            isLight\n          } = value;\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(TrendingContainer, {\n              isLight: isLight,\n              children: [/*#__PURE__*/_jsxDEV(TrendingIconCont, {\n                isLight: isLight,\n                children: /*#__PURE__*/_jsxDEV(FaGamepad, {\n                  className: \"trending-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TrendingHeading, {\n                isLight: isLight,\n                children: \"Gaming\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MainContainer, {\n              isLight: isLight,\n              children: videos.map(each => /*#__PURE__*/_jsxDEV(GamingPage, {\n                details: each\n              }, each.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.main = () => {\n      const {\n        status\n      } = this.state;\n\n      switch (status) {\n        case AlteringOne.loading:\n          return this.loader();\n\n        case AlteringOne.success:\n          return this.mainContainer();\n\n        case AlteringOne.failure:\n          return this.failure();\n\n        default:\n          return this.loader();\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getVideos();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(AccessOfAllStateOne.Consumer, {\n      children: value => {\n        const {\n          isLight\n        } = value;\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gaming-bottom-cont\",\n            children: [/*#__PURE__*/_jsxDEV(LeftContainer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"trending-right-top\",\n              children: this.main()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default GamingRoute;","map":{"version":3,"sources":["/home/workspace/reactjs/coding-practices/nxtWatchApp/src/components/GamingRoute/index.js"],"names":["Component","FaGamepad","Cookies","Loader","Header","LeftContainer","AccessOfAllStateOne","GamingPage","FailureError","TrendingIconCont","TrendingContainer","TrendingHeading","MainContainer","AlteringOne","loading","success","failure","GamingRoute","state","videos","status","getVideos","setState","jwtToken","get","url","options","headers","Authorization","response","fetch","jsonOne","json","ok","loader","mainContainer","value","isLight","map","each","id","main","componentDidMount","render"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\n\nimport { FaGamepad } from \"react-icons/fa\";\n\nimport Cookies from \"js-cookie\";\nimport Loader from \"react-loader-spinner\";\n\nimport Header from \"../Header\";\n\nimport LeftContainer from \"../LeftContainer\";\n\nimport AccessOfAllStateOne from \"../../complexOne/AccessOfAllStateOne\";\n\nimport GamingPage from \"../GamingPage\";\n\nimport FailureError from \"../FailureError\";\n\nimport {\n  TrendingIconCont,\n  TrendingContainer,\n  TrendingHeading,\n} from \"../Trending/styledOne\";\n\nimport MainContainer from \"./styledOne\";\n\nimport \"./index.css\";\n\nconst AlteringOne = {\n  loading: \"LOADING\",\n  success: \"SUCCESS\",\n  failure: \"FAILURE\",\n};\n\nclass GamingRoute extends Component {\n  state = { videos: \"\", status: AlteringOne.loading };\n\n  componentDidMount() {\n    this.getVideos();\n  }\n\n  getVideos = async () => {\n    this.setState({ status: AlteringOne.loading });\n    const jwtToken = Cookies.get(\"jwt_token\");\n    const url = \"https://apis.ccbp.in/videos/gaming\";\n    const options = {\n      headers: {\n        Authorization: `bearer ${jwtToken} `,\n      },\n    };\n    const response = await fetch(url, options);\n    const jsonOne = await response.json();\n    if (response.ok) {\n      this.setState({ videos: jsonOne.videos, status: AlteringOne.success });\n    } else {\n      this.setState({ status: AlteringOne.failure });\n    }\n  };\n\n  loader = () => (\n    <div data-testid=\"loader\" className=\"loading-main\">\n      <Loader type=\"TailSpin\" color=\"#00BFFF\" height={50} width={50} />\n    </div>\n  );\n\n  failure = () => (\n    <div>\n      <FailureError />\n    </div>\n  );\n\n  mainContainer = () => {\n    const { videos } = this.state;\n    return (\n      <AccessOfAllStateOne.Consumer>\n        {(value) => {\n          const { isLight } = value;\n          return (\n            <>\n              <TrendingContainer isLight={isLight}>\n                <TrendingIconCont isLight={isLight}>\n                  <FaGamepad className=\"trending-icon\" />\n                </TrendingIconCont>\n\n                <TrendingHeading isLight={isLight}>Gaming</TrendingHeading>\n              </TrendingContainer>\n              <MainContainer isLight={isLight}>\n                {videos.map((each) => (\n                  <GamingPage details={each} key={each.id} />\n                ))}\n              </MainContainer>\n            </>\n          );\n        }}\n      </AccessOfAllStateOne.Consumer>\n    );\n  };\n\n  main = () => {\n    const { status } = this.state;\n    switch (status) {\n      case AlteringOne.loading:\n        return this.loader();\n\n      case AlteringOne.success:\n        return this.mainContainer();\n\n      case AlteringOne.failure:\n        return this.failure();\n\n      default:\n        return this.loader();\n    }\n  };\n\n  render() {\n    return (\n      <AccessOfAllStateOne.Consumer>\n        {(value) => {\n          const { isLight } = value;\n\n          return (\n            <>\n              <Header />\n              <div className=\"gaming-bottom-cont\">\n                <LeftContainer />\n                <div className=\"trending-right-top\">{this.main()}</div>\n              </div>\n            </>\n          );\n        }}\n      </AccessOfAllStateOne.Consumer>\n    );\n  }\n}\n\nexport default GamingRoute;\n"]},"metadata":{},"sourceType":"module"}