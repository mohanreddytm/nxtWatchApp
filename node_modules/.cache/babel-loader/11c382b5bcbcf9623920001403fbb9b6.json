{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/nxtWatchApp/src/components/LoginPage/index.js\";\nimport { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport { InitialCont, MainCont, LabelElementFirst, InputContent, LabelShow } from \"./styledOne\";\nimport AccessOfAllStateOne from \"../../complexOne/AccessOfAllStateOne\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      usernameInput: \"\",\n      passwordInput: \"\",\n      showPasswordInput: false,\n      errorMsg: \"\",\n      showErrorMsg: \"\"\n    };\n\n    this.onChangeUsername = event => {\n      this.setState({\n        usernameInput: event.target.value\n      });\n    };\n\n    this.onChangePassword = event => {\n      this.setState({\n        passwordInput: event.target.value\n      });\n    };\n\n    this.onChangeCheckBox = event => {\n      this.setState({\n        showPasswordInput: event.target.checked\n      });\n    };\n\n    this.onClickLoginButton = async () => {\n      const {\n        usernameInput,\n        passwordInput\n      } = this.state;\n      const url = \"https://apis.ccbp.in/login\";\n      const details = {\n        username: usernameInput,\n        password: passwordInput\n      };\n      const options = {\n        method: \"POST\",\n        body: JSON.stringify(details)\n      };\n      const response = await fetch(url, options);\n      const jsonOne = await response.json();\n      const jwtToken = jsonOne.jwt_token;\n\n      if (jwtToken === undefined) {\n        this.setState({\n          showErrorMsg: true,\n          errorMsg: jsonOne.error_msg\n        });\n      } else {\n        Cookies.set(\"jwt_token\", jwtToken, {\n          expires: 30\n        });\n        const {\n          history\n        } = this.props;\n        history.replace(\"/\");\n      }\n    };\n  }\n\n  render() {\n    const {\n      usernameInput,\n      errorMsg,\n      passwordInput,\n      showPasswordInput,\n      showErrorMsg\n    } = this.state;\n    const jwtToken = Cookies.get(\"jwt_token\");\n\n    if (jwtToken !== undefined) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(AccessOfAllStateOne.Consumer, {\n      children: value => {\n        const {\n          isLight\n        } = value;\n        return /*#__PURE__*/_jsxDEV(InitialCont, {\n          isLight: isLight,\n          children: /*#__PURE__*/_jsxDEV(MainCont, {\n            className: \"login-main-container\",\n            isLight: isLight,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"website-logo\",\n              src: isLight ? \"https://assets.ccbp.in/frontend/react-js/nxt-watch-logo-light-theme-img.png\" : \"https://assets.ccbp.in/frontend/react-js/nxt-watch-logo-dark-theme-img.png\",\n              alt: \"website logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(LabelElementFirst, {\n              isLight: isLight,\n              htmlFor: \"usernameLabel\",\n              children: \"USERNAME\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputContent, {\n              isLight: isLight,\n              placeholder: \"Username\",\n              onChange: this.onChangeUsername,\n              id: \"usernameId\",\n              type: \"text\",\n              value: usernameInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(LabelElementFirst, {\n              isLight: isLight,\n              htmlFor: \"passwordLabel\",\n              children: \"PASSWORD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputContent, {\n              isLight: isLight,\n              placeholder: \"Password\",\n              onChange: this.onChangePassword,\n              type: showPasswordInput ? \"text\" : \"password\",\n              id: \"passwordId\",\n              value: passwordInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"login-main-cont-show-cont\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"login-main-cont-show-input\",\n                id: \"showId\",\n                type: \"checkbox\",\n                onChange: this.onChangeCheckBox\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(LabelShow, {\n                isLight: isLight,\n                className: \"login-main-cont-show-label\",\n                htmlFor: \"showId\",\n                children: \"Show Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.onClickLoginButton,\n              className: \"login-button\",\n              type: \"button\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), showErrorMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-msg\",\n              children: [\"*\", errorMsg]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["/home/workspace/reactjs/coding-practices/nxtWatchApp/src/components/LoginPage/index.js"],"names":["Component","Redirect","Cookies","InitialCont","MainCont","LabelElementFirst","InputContent","LabelShow","AccessOfAllStateOne","LoginPage","state","usernameInput","passwordInput","showPasswordInput","errorMsg","showErrorMsg","onChangeUsername","event","setState","target","value","onChangePassword","onChangeCheckBox","checked","onClickLoginButton","url","details","username","password","options","method","body","JSON","stringify","response","fetch","jsonOne","json","jwtToken","jwt_token","undefined","error_msg","set","expires","history","props","replace","render","get","isLight"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\n\nimport { Redirect } from \"react-router-dom\";\n\nimport Cookies from \"js-cookie\";\n\nimport {\n  InitialCont,\n  MainCont,\n  LabelElementFirst,\n  InputContent,\n  LabelShow,\n} from \"./styledOne\";\n\nimport AccessOfAllStateOne from \"../../complexOne/AccessOfAllStateOne\";\n\nimport \"./index.css\";\n\nclass LoginPage extends Component {\n  state = {\n    usernameInput: \"\",\n    passwordInput: \"\",\n    showPasswordInput: false,\n    errorMsg: \"\",\n    showErrorMsg: \"\",\n  };\n\n  onChangeUsername = (event) => {\n    this.setState({ usernameInput: event.target.value });\n  };\n\n  onChangePassword = (event) => {\n    this.setState({ passwordInput: event.target.value });\n  };\n\n  onChangeCheckBox = (event) => {\n    this.setState({ showPasswordInput: event.target.checked });\n  };\n\n  onClickLoginButton = async () => {\n    const { usernameInput, passwordInput } = this.state;\n    const url = \"https://apis.ccbp.in/login\";\n    const details = { username: usernameInput, password: passwordInput };\n\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify(details),\n    };\n\n    const response = await fetch(url, options);\n\n    const jsonOne = await response.json();\n    const jwtToken = jsonOne.jwt_token;\n\n    if (jwtToken === undefined) {\n      this.setState({ showErrorMsg: true, errorMsg: jsonOne.error_msg });\n    } else {\n      Cookies.set(\"jwt_token\", jwtToken, { expires: 30 });\n      const { history } = this.props;\n      history.replace(\"/\");\n    }\n  };\n\n  render() {\n    const {\n      usernameInput,\n      errorMsg,\n      passwordInput,\n      showPasswordInput,\n      showErrorMsg,\n    } = this.state;\n\n    const jwtToken = Cookies.get(\"jwt_token\");\n    if (jwtToken !== undefined) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <AccessOfAllStateOne.Consumer>\n        {(value) => {\n          const { isLight } = value;\n          return (\n            <InitialCont isLight={isLight}>\n              <MainCont className=\"login-main-container\" isLight={isLight}>\n                <img\n                  className=\"website-logo\"\n                  src={\n                    isLight\n                      ? \"https://assets.ccbp.in/frontend/react-js/nxt-watch-logo-light-theme-img.png\"\n                      : \"https://assets.ccbp.in/frontend/react-js/nxt-watch-logo-dark-theme-img.png\"\n                  }\n                  alt=\"website logo\"\n                />\n                <LabelElementFirst isLight={isLight} htmlFor=\"usernameLabel\">\n                  USERNAME\n                </LabelElementFirst>\n                <InputContent\n                  isLight={isLight}\n                  placeholder=\"Username\"\n                  onChange={this.onChangeUsername}\n                  id=\"usernameId\"\n                  type=\"text\"\n                  value={usernameInput}\n                />\n                <LabelElementFirst isLight={isLight} htmlFor=\"passwordLabel\">\n                  PASSWORD\n                </LabelElementFirst>\n                <InputContent\n                  isLight={isLight}\n                  placeholder=\"Password\"\n                  onChange={this.onChangePassword}\n                  type={showPasswordInput ? \"text\" : \"password\"}\n                  id=\"passwordId\"\n                  value={passwordInput}\n                />\n                <div className=\"login-main-cont-show-cont\">\n                  <input\n                    className=\"login-main-cont-show-input\"\n                    id=\"showId\"\n                    type=\"checkbox\"\n                    onChange={this.onChangeCheckBox}\n                  />\n                  <LabelShow\n                    isLight={isLight}\n                    className=\"login-main-cont-show-label\"\n                    htmlFor=\"showId\"\n                  >\n                    Show Password\n                  </LabelShow>\n                </div>\n                <button\n                  onClick={this.onClickLoginButton}\n                  className=\"login-button\"\n                  type=\"button\"\n                >\n                  Login\n                </button>\n                {showErrorMsg && <p className=\"error-msg\">*{errorMsg}</p>}\n              </MainCont>\n            </InitialCont>\n          );\n        }}\n      </AccessOfAllStateOne.Consumer>\n    );\n  }\n}\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}